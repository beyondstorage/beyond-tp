// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: job.proto

package models

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JobType int32

const (
	JobType_InvalidJobType    JobType = 0
	JobType_CopyDir           JobType = 1
	JobType_CopyFile          JobType = 2
	JobType_CopySingleFile    JobType = 3
	JobType_CopyMultipartFile JobType = 4
	JobType_CopyMultipart     JobType = 5
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0: "InvalidJobType",
		1: "CopyDir",
		2: "CopyFile",
		3: "CopySingleFile",
		4: "CopyMultipartFile",
		5: "CopyMultipart",
	}
	JobType_value = map[string]int32{
		"InvalidJobType":    0,
		"CopyDir":           1,
		"CopyFile":          2,
		"CopySingleFile":    3,
		"CopyMultipartFile": 4,
		"CopyMultipart":     5,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_job_proto_enumTypes[0].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_job_proto_enumTypes[0]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{0}
}

type JobStatus int32

const (
	JobStatus_InvalidJobStatus JobStatus = 0
	JobStatus_Succeed          JobStatus = 1
	JobStatus_Failed           JobStatus = 2
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "InvalidJobStatus",
		1: "Succeed",
		2: "Failed",
	}
	JobStatus_value = map[string]int32{
		"InvalidJobStatus": 0,
		"Succeed":          1,
		"Failed":           2,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_job_proto_enumTypes[1].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_job_proto_enumTypes[1]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{1}
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type    JobType `protobuf:"varint,2,opt,name=type,proto3,enum=job.JobType" json:"type,omitempty"`
	Content []byte  `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{0}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_InvalidJobType
}

func (x *Job) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type CopyDirJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src       uint32 `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst       uint32 `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SrcPath   string `protobuf:"bytes,3,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DstPath   string `protobuf:"bytes,4,opt,name=dst_path,json=dstPath,proto3" json:"dst_path,omitempty"`
	Recursive bool   `protobuf:"varint,5,opt,name=recursive,proto3" json:"recursive,omitempty"`
}

func (x *CopyDirJob) Reset() {
	*x = CopyDirJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyDirJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyDirJob) ProtoMessage() {}

func (x *CopyDirJob) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyDirJob.ProtoReflect.Descriptor instead.
func (*CopyDirJob) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{1}
}

func (x *CopyDirJob) GetSrc() uint32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *CopyDirJob) GetDst() uint32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *CopyDirJob) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *CopyDirJob) GetDstPath() string {
	if x != nil {
		return x.DstPath
	}
	return ""
}

func (x *CopyDirJob) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type CopyFileJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     uint32 `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     uint32 `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SrcPath string `protobuf:"bytes,3,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DstPath string `protobuf:"bytes,4,opt,name=dst_path,json=dstPath,proto3" json:"dst_path,omitempty"`
}

func (x *CopyFileJob) Reset() {
	*x = CopyFileJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyFileJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileJob) ProtoMessage() {}

func (x *CopyFileJob) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileJob.ProtoReflect.Descriptor instead.
func (*CopyFileJob) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{2}
}

func (x *CopyFileJob) GetSrc() uint32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *CopyFileJob) GetDst() uint32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *CopyFileJob) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *CopyFileJob) GetDstPath() string {
	if x != nil {
		return x.DstPath
	}
	return ""
}

type CopySingleFileJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     uint32 `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     uint32 `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SrcPath string `protobuf:"bytes,3,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DstPath string `protobuf:"bytes,4,opt,name=dst_path,json=dstPath,proto3" json:"dst_path,omitempty"`
	Size    int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CopySingleFileJob) Reset() {
	*x = CopySingleFileJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopySingleFileJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopySingleFileJob) ProtoMessage() {}

func (x *CopySingleFileJob) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopySingleFileJob.ProtoReflect.Descriptor instead.
func (*CopySingleFileJob) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{3}
}

func (x *CopySingleFileJob) GetSrc() uint32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *CopySingleFileJob) GetDst() uint32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *CopySingleFileJob) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *CopySingleFileJob) GetDstPath() string {
	if x != nil {
		return x.DstPath
	}
	return ""
}

func (x *CopySingleFileJob) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CopyMultipartFileJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     uint32 `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     uint32 `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SrcPath string `protobuf:"bytes,3,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DstPath string `protobuf:"bytes,4,opt,name=dst_path,json=dstPath,proto3" json:"dst_path,omitempty"`
	Size    int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CopyMultipartFileJob) Reset() {
	*x = CopyMultipartFileJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyMultipartFileJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyMultipartFileJob) ProtoMessage() {}

func (x *CopyMultipartFileJob) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyMultipartFileJob.ProtoReflect.Descriptor instead.
func (*CopyMultipartFileJob) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{4}
}

func (x *CopyMultipartFileJob) GetSrc() uint32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *CopyMultipartFileJob) GetDst() uint32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *CopyMultipartFileJob) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *CopyMultipartFileJob) GetDstPath() string {
	if x != nil {
		return x.DstPath
	}
	return ""
}

func (x *CopyMultipartFileJob) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CopyMultipartJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src         uint32 `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst         uint32 `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SrcPath     string `protobuf:"bytes,3,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DstPath     string `protobuf:"bytes,4,opt,name=dst_path,json=dstPath,proto3" json:"dst_path,omitempty"`
	MultipartId string `protobuf:"bytes,5,opt,name=multipart_id,json=multipartId,proto3" json:"multipart_id,omitempty"`
	Size        int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Index       uint32 `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	Offset      int64  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *CopyMultipartJob) Reset() {
	*x = CopyMultipartJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyMultipartJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyMultipartJob) ProtoMessage() {}

func (x *CopyMultipartJob) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyMultipartJob.ProtoReflect.Descriptor instead.
func (*CopyMultipartJob) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{5}
}

func (x *CopyMultipartJob) GetSrc() uint32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *CopyMultipartJob) GetDst() uint32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *CopyMultipartJob) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *CopyMultipartJob) GetDstPath() string {
	if x != nil {
		return x.DstPath
	}
	return ""
}

func (x *CopyMultipartJob) GetMultipartId() string {
	if x != nil {
		return x.MultipartId
	}
	return ""
}

func (x *CopyMultipartJob) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CopyMultipartJob) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CopyMultipartJob) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_job_proto protoreflect.FileDescriptor

var file_job_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6a, 0x6f, 0x62,
	0x22, 0x51, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x70, 0x79, 0x44, 0x69, 0x72, 0x4a,
	0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x22, 0x67, 0x0a, 0x0b, 0x43, 0x6f,
	0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x70, 0x79,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4a, 0x6f, 0x62,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73,
	0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x64, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xd1,
	0x01, 0x0a, 0x10, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x4a, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x2a, 0x76, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x70, 0x79, 0x44, 0x69, 0x72, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x6f, 0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x6f, 0x70, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x03,
	0x12, 0x15, 0x0a, 0x11, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x70, 0x79, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x10, 0x05, 0x2a, 0x3a, 0x0a, 0x09, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x64, 0x6d, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_job_proto_rawDescOnce sync.Once
	file_job_proto_rawDescData = file_job_proto_rawDesc
)

func file_job_proto_rawDescGZIP() []byte {
	file_job_proto_rawDescOnce.Do(func() {
		file_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_job_proto_rawDescData)
	})
	return file_job_proto_rawDescData
}

var file_job_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_job_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_job_proto_goTypes = []interface{}{
	(JobType)(0),                 // 0: job.JobType
	(JobStatus)(0),               // 1: job.JobStatus
	(*Job)(nil),                  // 2: job.Job
	(*CopyDirJob)(nil),           // 3: job.CopyDirJob
	(*CopyFileJob)(nil),          // 4: job.CopyFileJob
	(*CopySingleFileJob)(nil),    // 5: job.CopySingleFileJob
	(*CopyMultipartFileJob)(nil), // 6: job.CopyMultipartFileJob
	(*CopyMultipartJob)(nil),     // 7: job.CopyMultipartJob
}
var file_job_proto_depIdxs = []int32{
	0, // 0: job.Job.type:type_name -> job.JobType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_job_proto_init() }
func file_job_proto_init() {
	if File_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyDirJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyFileJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopySingleFileJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyMultipartFileJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyMultipartJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_job_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_job_proto_goTypes,
		DependencyIndexes: file_job_proto_depIdxs,
		EnumInfos:         file_job_proto_enumTypes,
		MessageInfos:      file_job_proto_msgTypes,
	}.Build()
	File_job_proto = out.File
	file_job_proto_rawDesc = nil
	file_job_proto_goTypes = nil
	file_job_proto_depIdxs = nil
}
